openapi: '3.0.3'
info:
  version: '0.1.0'
  title: Applications API
  description: An API to demonstrate Swagger and Spring Boot
security:
  #  - bearerAuth: []
  - apiKeyAuth: []
paths:
  /badges:
    post:
      description: create a badge
      operationId: createBadge
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Badge'
      responses:
        '201':
          description: created
          content:
            'application/json':
              schema:
                type: string

    get:
      description: get the list of all badges
      operationId: getBadges
      responses:
        '200':
          description: success
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Badge'
  # configurer 1 badge
  /badges/{id}:
    get:
      description: get one badge, by id
      operationId: getBadge
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Badge'
  /fruits:
    post:
      description: create a fruit
      operationId: createFruit
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Fruit'
      responses:
        '201':
          description: created
    get:
      description: get the list of all fruits
      operationId: getFruits
      responses:
        '200':
          description: success
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fruit'
  /fruits/{id}:
    get:
      description: get one fruit, by id
      operationId: getFruit
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Fruit'

  /applications:
      post:
        description: register an app
        operationId: registerApp
        requestBody:
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Registration'
        responses:
          '201':
            description: created
            content:
              'application/json':
                schema:
                  $ref: '#/components/schemas/ApiKey'
      get:
        description: get the list of all applications
        operationId: getApplications
        responses:
          '200':
            description: success
            content:
              'application/json':
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Application'

components:
  securitySchemes:
    #    bearerAuth:            # arbitrary name for the security scheme
    #      type: http
    #      scheme: bearer       # warning: it HAS TO be a lowercase b for the swagger ui version used in springfox
    #      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
  schemas:
    Fruit:
      type: object
      properties:
        kind:
          type: string
        colour:
          type: string
        size:
          type: string
        weight:
          type: string
        expirationDate:
          type: string
          format: date
          nullable: false
        expirationDateTime:
          type: string
          format: date-time

    Badge:
      type: object
      properties:
        name:
          type: string
        image:
          type: string

    Application:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        contact:
          type: string
        XApiKey:
          type: string
          format: uuid

    Registration:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        contact:
          type: string

    ApiKey:
      type: object
      properties:
        XApiKey:
          type: string
          format: uuid

    EndUser:
      type: object
      properties:
        IDUser:
          type: string
          format: uuid
        userName:
          type: string

    Rewards:
      type: object
