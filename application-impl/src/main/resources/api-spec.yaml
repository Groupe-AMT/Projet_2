openapi: '3.0.3'
info:
  version: '0.2.0'
  title: Applications API
  description: An API to demonstrate Swagger and Spring Boot
security:
  #  - bearerAuth: []
  - apiKeyAuth: []
paths:
  /rule:
    post:
      description: create a rule
      operationId: createRule
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Rule'
      responses:
        '201':
          description: created
          content:
            'plain/text':
              schema:
                type: string

  /event:
    post:
      description: create an event
      operationId: createEvent
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '201':
          description: created
          content:
            'plain/text':
              schema:
                type: string
  /badges:
    post:
      description: create a badge
      operationId: createBadge
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Badge'
      responses:
        '201':
          description: created

    get:
      description: get the list of all badges
      operationId: getBadges
      responses:
        '200':
          description: success
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Badge'
  # configurer 1 badge
  /badges/{id}:
    get:
      description: get one badge, by id
      operationId: getBadge
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Badge'

  /applications:
    post:
      description: register an app
      operationId: registerApp
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Registration'
      responses:
        '201':
          description: created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiKey'
    get:
      description: get the list of all applications
      operationId: getApplications
      responses:
        '200':
          description: success
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'

  /pointscales:
    post:
      description: create a pointScale
      operationId: createPointScale
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/PointScale'
      responses:
        '201':
          description: created

    get:
      description: get the list of all PointScales
      operationId: getPointScales
      responses:
        '200':
          description: success
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PointScale'

  /pointscales/{id}:
    get:
      description: get one pointScale, by id
      operationId: getPointScale
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PointScale'

components:
  securitySchemes:
    #    bearerAuth:            # arbitrary name for the security scheme
    #      type: http
    #      scheme: bearer       # warning: it HAS TO be a lowercase b for the swagger ui version used in springfox
    #      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
  schemas:
    Badge:
      type: object
      properties:
        name:
          type: string
        image:
          type: string

    Application:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        contact:
          type: string
        XApiKey:
          type: string
          format: uuid

    Registration:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        contact:
          type: string

    ApiKey:
      type: object
      properties:
        XApiKey:
          type: string
          format: uuid

    EndUser:
      type: object
      properties:
        IDUser:
          type: string
          format: uuid
        userName:
          type: string
        appName:
          type: string
        nbEvents:
          type: integer
        nbVotes:
          type: integer
        nbMessages:
          type: integer

    BadgeReward:
      type: object

    PointScaleReward:
      type: object

    Event:
      type: object
      properties:
        IDUser:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
        userName:
          type: string
        action:
          type: string
        attribute:
          type: string

    Rule:
      type: object
      properties:
        name:
          type: string
        if:
          type: object
          properties:
            action:
              type: string
            attribute:
              type: string
        then:
          type: object
          properties:
            badge:
              type: string
            points:
              type: object
              properties:
                pointscale:
                  type: string
                amount:
                  type: integer

    PointScale:
      type: object
      properties:
        name:
          type: string
        scale:
          type: integer
